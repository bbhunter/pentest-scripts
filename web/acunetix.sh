#!/bin/bash

#########################################################################
#                                                                       #
# Resource:https://www.acunetix.com/blog/docs/managing-scans-bash-api/  #
#                                                                       #
#########################################################################

Acunetix_API_URL=""
Acunetix_API_KEY=""

# Scan Profiles > Add New Profile
# Open the inspect on browser and open the "Scan Profile" page and get the ID
FullScanProfileID=""

wait_scan_finish="no"
wait_count=5

options+=(-u --url -ul --url-list -w --wait)

while [ $# -ne 0 ]; do
    (( args_count += 1 ))
    case $1 in
        -u|--url)
            if [ "${wait_scan_finish}" == "yes" ] || [ -s "${url_list_file}" ]; then
                echo "This option (-w|--wait) only can be used with -ul|--url-list."
                exit 1
            else
                target_url="$2"
                shift 2
            fi
            ;;
        -ul|--url-list)
            if [ -s "$2" ]; then 
                url_list_file=$2
                shift 2
            else
                echo "Provide a valid list to upload and scan!"
                exit 1
            fi    
            ;;
        -w|--wait)
            if [ -n "${target_url}" ]; then
                echo "This option (-w|--wait) only can be used with -ul|--url-list."
                exit 1
            else
                unset wait_scan_finish
                wait_scan_finish="yes"
                shift
            fi
            ;;
	    -?*)
            echo "Unknow option: $1!"
	        exit 1
	        ;;
        *)
	        break
    esac
done

send_url_to_scan(){
    TargetURL=$1
    TargetDESC="BugBountyScan"
    
    # Create the scan and get the ID to start the scan
    # Then of line to get the target id could be: 
    # > grep -Po '"target_id": *\K"[^"]*"' | tr -d '"'
    # > jq -r '.target_id'
    TargetID="$(curl -ksS -X POST -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" --data '{"address":"'"${TargetURL}"'","description":"'"${TargetDESC}"'","type":"default","criticality":10}' "${Acunetix_API_URL}/targets" | jq -r '.target_id')"
    
    # Start the scan
    curl -i -ksS -X POST -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" --data '{"profile_id":"'"${FullScanProfileID}"'","incremental":false,"schedule":{"disable":false,"start_date":null,"time_sensitive":false},"user_authorized_to_scan":"yes","target_id":"'"${TargetID}"'"}' -o /dev/null "${Acunetix_API_URL}/scans"
}

if [ -n "${target_url}" ] && [ ! -s "${url_list_file}" ] && [ "${wait_scan_finish}" == "no" ]; then
    send_url_to_scan "${target_url}"
fi

if [ -z "${target_url}" ] && [ -s "${url_list_file}" ] && [ "${wait_scan_finish}" == "no" ]; then
    while read -r target_url; do
        send_url_to_scan "${target_url}"
    done < "${url_list_file}"
fi

if [ -z "${target_url}" ] && [ -s "${url_list_file}" ] && [ "${wait_scan_finish}" == "yes" ]; then
    while read -r target_url; do
	    sleep 5s
        while true; do
	        if [[ $(curl -ksS -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/scans?q=status:processing" | jq -r '.pagination.count' ) -gt ${wait_count} ]]; then
	            sleep 20s
	        else
		        break
	        fi
        done
	    send_url_to_scan "${target_url}"
    done < "${url_list_file}"
fi

for severity in high medium low info; do
    [[ "${severity}" == "high" ]] && severity_id="3"
    [[ "${severity}" == "medium" ]] && severity_id="2"
    [[ "${severity}" == "low" ]] && severity_id="1"
    [[ "${severity}" == "info" ]] && severity_id="0"
    curl -ksS -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/vulnerability_types?q=severity:${severity_id}" | \
    jq -r '.vulnerability_types.[].vt_id' | \
    sort -u | \
    while read -r vuln_type; do
        curl -ksS -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/vulnerabilities?q=status:open;vt_id:${vuln_type};severity:${severity_id}" | \
        jq -r '.vulnerabilities.[] | "\(.vt_name) \(.affects_url) \(.vuln_id)"' | \
        sort -u | \
        while read -r vuln_data; do
            vuln_name_endpoint=$(echo "${vuln_data}" | sed "s/[[:blank:]][0-9].*$//g")
            vuln_id=$(echo "${vuln_data}" | grep -Eo "[[:blank:]][0-9].*$" | sed 's/[[:blank:]]//g')
            request="$(curl -ksS -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/vulnerabilities/${vuln_id}" | jq -r '.request' | sed 's/\r//g')"
            [[ -z "${request}" ]] && \
                request="$(curl -ksS -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/vulnerabilities/${vuln_id}" | jq -r '.details' | sed 's/\r//g')"
            if [[ "${severity}" == "high" ]] || [[ "${severity}" == "medium" ]]; then
                echo -e "${vuln_name_endpoint}\n\n${request}" | notify -nc -silent -id "${severity}"
            fi
            curl -ksS -X PUT -H "Content-Type: application/json" -H "X-Auth: ${Acunetix_API_KEY}" "${Acunetix_API_URL}/vulnerabilities/${vuln_id}/status" --data '{"status":"ignored"}' -o /dev/null
            unset vuln_data
            unset vuln_name_endpoint
            unset vuln_id
            unset request
        done
        unset vuln_type
    done
done
